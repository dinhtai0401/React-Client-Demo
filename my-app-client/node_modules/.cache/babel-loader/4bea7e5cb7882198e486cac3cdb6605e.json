{"ast":null,"code":"import axios from 'axios';\nimport constants from '../constants.json';\nlet userInfo = {\n  username: null,\n  password: null\n};\nlet myAuth = {\n  authenticate: (username, password, token) => {\n    return new Promise((resolve, reject) => {\n      axios.get(constants.baseAddress + '/users/:id', {\n        auth: {\n          username: username,\n          password: password\n        }\n      }).then(result => {\n        userInfo = {\n          username: username,\n          password: password\n        };\n        resolve();\n      }).catch(error => {\n        console.log(error);\n        reject();\n      });\n    }).then(f => {\n      const token = f.data.token;\n\n      if (token) {\n        axios.defaults.headers.common['Authentication'] = `Bearer ${token}`;\n      } else {\n        delete axios.defaults.headers.common['Authentication'];\n      }\n\n      console.log(token);\n    });\n  },\n  getAxiosAuth: () => {\n    return {\n      auth: userInfo\n    };\n  }\n};\nexport default myAuth;","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/components/Auth.js"],"names":["axios","constants","userInfo","username","password","myAuth","authenticate","token","Promise","resolve","reject","get","baseAddress","auth","then","result","catch","error","console","log","f","data","defaults","headers","common","getAxiosAuth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,IADG;AAEbC,EAAAA,QAAQ,EAAE;AAFG,CAAf;AAOA,IAAIC,MAAM,GAAG;AACTC,EAAAA,YAAY,EAAE,CAACH,QAAD,EAAWC,QAAX,EAAqBG,KAArB,KAA+B;AAC3C,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCV,MAAAA,KAAK,CAACW,GAAN,CAAUV,SAAS,CAACW,WAAV,GAAwB,YAAlC,EACE;AACIC,QAAAA,IAAI,EAAE;AACNV,UAAAA,QAAQ,EAAEA,QADJ;AAENC,UAAAA,QAAQ,EAAEA;AAFJ;AADV,OADF,EAOGU,IAPH,CAOQC,MAAM,IAAI;AACVb,QAAAA,QAAQ,GAAG;AACPC,UAAAA,QAAQ,EAAEA,QADH;AAEPC,UAAAA,QAAQ,EAAEA;AAFH,SAAX;AAIJK,QAAAA,OAAO;AACR,OAbH,EAcGO,KAdH,CAcSC,KAAK,IACV;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAP,QAAAA,MAAM;AACP,OAlBL;AAoBH,KArBQ,EAqBNI,IArBM,CAqBCM,CAAD,IAAO;AACZ,YAAMb,KAAK,GAAGa,CAAC,CAACC,IAAF,CAAOd,KAArB;;AACA,UAAIA,KAAJ,EAAW;AACPP,QAAAA,KAAK,CAACsB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,gBAA9B,IAAmD,UAAUjB,KAAO,EAApE;AACA,OAFJ,MAEU;AACN,eAAOP,KAAK,CAACsB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,gBAA9B,CAAP;AACH;;AACDN,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACD,KA7BM,CAAP;AA8BD,GAhCQ;AAiCTkB,EAAAA,YAAY,EAAE,MAAM;AAClB,WAAO;AACLZ,MAAAA,IAAI,EAAEX;AADD,KAAP;AAGD;AArCQ,CAAb;AA0CA,eAAeG,MAAf","sourcesContent":["import axios from 'axios';\nimport constants from '../constants.json';\n\nlet userInfo = {\n  username: null,\n  password: null,\n}\n\n\n\nlet myAuth = {\n    authenticate: (username, password, token) => {      \n      return new Promise((resolve, reject) => {\n        axios.get(constants.baseAddress + '/users/:id', \n          {\n              auth: {\n              username: username,\n              password: password\n            }\n          })\n          .then(result => {\n                userInfo = {\n                    username: username,\n                    password: password,\n                    };\n            resolve();\n          })\n          .catch(error => \n            {\n              console.log(error);\n              reject();\n            }\n          )\n    }).then( (f) => {\n        const token = f.data.token\n        if (token) {\n            axios.defaults.headers.common['Authentication'] = `Bearer ${ token }`\n           } else {\n            delete axios.defaults.headers.common['Authentication']\n        }\n        console.log(token);\n      })\n    },\n    getAxiosAuth: () => {\n      return {\n        auth: userInfo\n      }\n    } \n}\n\n\n\nexport default myAuth;"]},"metadata":{},"sourceType":"module"}