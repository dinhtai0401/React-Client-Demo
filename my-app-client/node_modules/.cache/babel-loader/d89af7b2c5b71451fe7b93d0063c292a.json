{"ast":null,"code":"import axios from 'axios';\nimport constants from '../constants.json';\nlet userInfo = {\n  username: null,\n  password: null\n};\nlet myAuth = {\n  authenticate: (username, password, token) => {\n    return new Promise((resolve, reject) => {\n      axios.get(constants.baseAddress + '/users/:id', {\n        auth: {\n          username: username,\n          password: password\n        }\n      }).then(f => {\n        const token = f.data.token;\n        axios.get(constants.baseAddress + '/users/signin', token);\n        console.log(token);\n      }).then(result => {\n        userInfo = {\n          username: username,\n          password: password\n        };\n        resolve();\n      }).then(response => response.data.token).catch(error => {\n        console.log(error);\n        reject();\n      });\n    });\n  },\n  getAxiosAuth: () => {\n    return {\n      auth: userInfo\n    };\n  }\n};\nexport default myAuth;","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/components/Auth.js"],"names":["axios","constants","userInfo","username","password","myAuth","authenticate","token","Promise","resolve","reject","get","baseAddress","auth","then","f","data","console","log","result","response","catch","error","getAxiosAuth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,IADG;AAEbC,EAAAA,QAAQ,EAAE;AAFG,CAAf;AAOA,IAAIC,MAAM,GAAG;AACTC,EAAAA,YAAY,EAAE,CAACH,QAAD,EAAWC,QAAX,EAAqBG,KAArB,KAA+B;AAC3C,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCV,MAAAA,KAAK,CAACW,GAAN,CAAUV,SAAS,CAACW,WAAV,GAAwB,YAAlC,EACE;AACIC,QAAAA,IAAI,EAAE;AACNV,UAAAA,QAAQ,EAAEA,QADJ;AAENC,UAAAA,QAAQ,EAAEA;AAFJ;AADV,OADF,EAMKU,IANL,CAMYC,CAAD,IAAO;AACd,cAAMR,KAAK,GAAGQ,CAAC,CAACC,IAAF,CAAOT,KAArB;AACAP,QAAAA,KAAK,CAACW,GAAN,CAAUV,SAAS,CAACW,WAAV,GAAwB,eAAlC,EAAmDL,KAAnD;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD,OAVH,EAWGO,IAXH,CAWQK,MAAM,IAAI;AACVjB,QAAAA,QAAQ,GAAG;AACPC,UAAAA,QAAQ,EAAEA,QADH;AAEPC,UAAAA,QAAQ,EAAEA;AAFH,SAAX;AAIJK,QAAAA,OAAO;AACR,OAjBH,EAkBGK,IAlBH,CAkBQM,QAAQ,IAAIA,QAAQ,CAACJ,IAAT,CAAcT,KAlBlC,EAmBGc,KAnBH,CAmBSC,KAAK,IACV;AACEL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAZ,QAAAA,MAAM;AACP,OAvBL;AAyBH,KA1BQ,CAAP;AA2BD,GA7BQ;AA8BTa,EAAAA,YAAY,EAAE,MAAM;AAClB,WAAO;AACLV,MAAAA,IAAI,EAAEX;AADD,KAAP;AAGD;AAlCQ,CAAb;AAuCA,eAAeG,MAAf","sourcesContent":["import axios from 'axios';\nimport constants from '../constants.json';\n\nlet userInfo = {\n  username: null,\n  password: null,\n}\n\n\n\nlet myAuth = {\n    authenticate: (username, password, token) => {      \n      return new Promise((resolve, reject) => {\n        axios.get(constants.baseAddress + '/users/:id', \n          {\n              auth: {\n              username: username,\n              password: password\n            }\n          }).then( (f) => {\n            const token = f.data.token;\n            axios.get(constants.baseAddress + '/users/signin', token); \n            console.log(token);\n          })\n          .then(result => {\n                userInfo = {\n                    username: username,\n                    password: password,\n                    };\n            resolve();\n          })\n          .then(response => response.data.token)\n          .catch(error => \n            {\n              console.log(error);\n              reject();\n            }\n          )\n    })\n    },\n    getAxiosAuth: () => {\n      return {\n        auth: userInfo\n      }\n    } \n}\n\n\n\nexport default myAuth;"]},"metadata":{},"sourceType":"module"}