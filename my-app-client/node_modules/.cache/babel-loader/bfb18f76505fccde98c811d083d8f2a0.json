{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyen/Desktop/my-app/src/components/Header.js\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nexport default class Header extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this._handleSignInClick = () => {\n      // Authenticate using via passport api in the backend\n      // Open Twitter login page\n      // Upon successful login, a cookie session will be stored in the client\n      window.open(\"http://localhost:4000/auth/google\", \"_self\");\n    };\n\n    this._handleLogoutClick = () => {\n      // Logout using Twitter passport api\n      // Set authenticated state to false in the HomePage\n      window.open(\"http://localhost:4000/auth/logout\", \"_self\");\n      this.props.handleNotAuthenticated();\n    };\n  }\n\n  render() {\n    const {\n      authenticated\n    } = this.props;\n    console.log(this.props.authenticated);\n    return React.createElement(\"ul\", {\n      className: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Home\")), authenticated ? React.createElement(\"li\", {\n      onClick: this._handleLogoutClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Logout\") : React.createElement(\"li\", {\n      onClick: this._handleSignInClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Login\"));\n  }\n\n}\nHeader.propTypes = {\n  authenticated: PropTypes.bool.isRequired\n};","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/components/Header.js"],"names":["Link","PropTypes","React","Component","Header","_handleSignInClick","window","open","_handleLogoutClick","props","handleNotAuthenticated","render","authenticated","console","log","propTypes","bool","isRequired"],"mappings":";AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAsB5CE,kBAtB4C,GAsBvB,MAAM;AACzB;AACA;AACA;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAY,mCAAZ,EAAiD,OAAjD;AACD,KA3B2C;;AAAA,SA6B5CC,kBA7B4C,GA6BvB,MAAM;AACzB;AACA;AACAF,MAAAA,MAAM,CAACC,IAAP,CAAY,mCAAZ,EAAiD,OAAjD;AACA,WAAKE,KAAL,CAAWC,sBAAX;AACD,KAlC2C;AAAA;;AAK5CC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAoB,KAAKH,KAA/B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWG,aAAvB;AACA,WACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAIGA,aAAa,GACZ;AAAI,MAAA,OAAO,EAAE,KAAKJ,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADY,GAGZ;AAAI,MAAA,OAAO,EAAE,KAAKH,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPJ,CADF;AAYD;;AApB2C;AAAzBD,M,CACZW,S,GAAY;AACjBH,EAAAA,aAAa,EAAEX,SAAS,CAACe,IAAV,CAAeC;AADb,C","sourcesContent":["import { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\n\nexport default class Header extends Component {\n  static propTypes = {\n    authenticated: PropTypes.bool.isRequired\n  };\n\n  render() {\n    const { authenticated } = this.props;\n    console.log(this.props.authenticated)\n    return (\n      <ul className=\"menu\">\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        {authenticated ? (\n          <li onClick={this._handleLogoutClick}>Logout</li>\n        ) : (\n          <li onClick={this._handleSignInClick}>Login</li>\n        )}\n      </ul>\n    );\n  }\n\n  _handleSignInClick = () => {\n    // Authenticate using via passport api in the backend\n    // Open Twitter login page\n    // Upon successful login, a cookie session will be stored in the client\n    window.open(\"http://localhost:4000/auth/google\", \"_self\");\n  };\n\n  _handleLogoutClick = () => {\n    // Logout using Twitter passport api\n    // Set authenticated state to false in the HomePage\n    window.open(\"http://localhost:4000/auth/logout\", \"_self\");\n    this.props.handleNotAuthenticated();\n  };\n}"]},"metadata":{},"sourceType":"module"}