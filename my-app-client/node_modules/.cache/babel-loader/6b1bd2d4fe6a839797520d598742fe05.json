{"ast":null,"code":"import axios from 'axios';\nimport constants from '../constants.json';\nlet userInfo = {\n  username: null,\n  password: null\n};\nlet myAuth = {\n  authenticate: (username, password, token) => {\n    return new Promise((resolve, reject) => {\n      axios.get(constants.baseAddress + '/users', {\n        auth: {\n          username: username,\n          password: password\n        }\n      }).then(e => {\n        const token = e.data.token;\n        const config = {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        };\n        axios.get(constants.baseAddress + '/users/signin', config).catch(error => {\n          console.log(error);\n          reject();\n        });\n      });\n    });\n  },\n  getAxiosAuth: () => {\n    return {\n      auth: userInfo\n    };\n  }\n};\nexport default myAuth;","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/components/Auth.js"],"names":["axios","constants","userInfo","username","password","myAuth","authenticate","token","Promise","resolve","reject","get","baseAddress","auth","then","e","data","config","headers","Authorization","catch","error","console","log","getAxiosAuth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,IADG;AAEbC,EAAAA,QAAQ,EAAE;AAFG,CAAf;AAOA,IAAIC,MAAM,GAAG;AACTC,EAAAA,YAAY,EAAE,CAACH,QAAD,EAAWC,QAAX,EAAqBG,KAArB,KAA+B;AAC3C,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCV,MAAAA,KAAK,CAACW,GAAN,CAAUV,SAAS,CAACW,WAAV,GAAwB,QAAlC,EACI;AACEC,QAAAA,IAAI,EAAE;AACNV,UAAAA,QAAQ,EAAEA,QADJ;AAENC,UAAAA,QAAQ,EAAEA;AAFJ;AADR,OADJ,EAMOU,IANP,CAMaC,CAAD,IAAK;AACb,cAAMR,KAAK,GAAGQ,CAAC,CAACC,IAAF,CAAOT,KAArB;AACA,cAAMU,MAAM,GAAG;AACXC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAG,UAASZ,KAAM;AAAjC;AADE,SAAf;AAGAP,QAAAA,KAAK,CAACW,GAAN,CAAUV,SAAS,CAACW,WAAV,GAAwB,eAAlC,EACIK,MADJ,EAEEG,KAFF,CAEQC,KAAK,IACT;AACEC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAX,UAAAA,MAAM;AACP,SANL;AAOC,OAlBL;AAmBH,KApBQ,CAAP;AAqBD,GAvBQ;AAwBTc,EAAAA,YAAY,EAAE,MAAM;AAClB,WAAO;AACLX,MAAAA,IAAI,EAAEX;AADD,KAAP;AAGD;AA5BQ,CAAb;AAiCA,eAAeG,MAAf","sourcesContent":["import axios from 'axios';\nimport constants from '../constants.json';\n\nlet userInfo = {\n  username: null,\n  password: null,\n}\n\n\n\nlet myAuth = {\n    authenticate: (username, password, token) => {      \n      return new Promise((resolve, reject) => {\n        axios.get(constants.baseAddress + '/users', \n            {\n              auth: {\n              username: username,\n              password: password,\n            }\n            }).then((e)=>{\n            const token = e.data.token;\n            const config = {\n                headers: { Authorization: `Bearer ${token}` }\n            };\n            axios.get(constants.baseAddress + '/users/signin',\n                config\n            ).catch(error => \n                {\n                  console.log(error);\n                  reject();\n                });\n            })\n    })\n    },\n    getAxiosAuth: () => {\n      return {\n        auth: userInfo,\n      }\n    } \n}\n\n\n\nexport default myAuth;"]},"metadata":{},"sourceType":"module"}