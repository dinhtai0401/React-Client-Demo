{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyen/Desktop/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport LoginView from './components/LoginView';\nimport Auth from './components/Auth';\nimport axios from 'axios';\nimport constants from './constants.json';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogin = () => {\n      this.setState({\n        isAuthenticated: true\n      });\n    };\n\n    this.onLoginFail = () => {\n      this.setState({\n        isAuthenticated: false\n      });\n      console.log(\"Login failed\");\n    };\n\n    this.state = {\n      isAuthenticated: false,\n      someData: null,\n      message: \"\"\n    };\n  }\n\n  /* This function illustrates how some protected API could be accessed */\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: routeProps => React.createElement(LoginView, Object.assign({\n        loginSuccess: this.onLogin,\n        loginFail: this.onLoginFail,\n        userInfo: this.state.userInfo,\n        redirectPathOnSuccess: \"/example\"\n      }, routeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","LoginView","Auth","axios","constants","App","constructor","props","onLogin","setState","isAuthenticated","onLoginFail","console","log","state","someData","message","render","routeProps","userInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,eAAe,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AACzCS,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;;AADF,SASAC,OATA,GASU,MAAM;AACd,WAAKC,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACD,KAXD;;AAAA,SAaAC,WAbA,GAac,MAAM;AAClB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAhBD;;AAEE,SAAKC,KAAL,GAAa;AACXJ,MAAAA,eAAe,EAAE,KADN;AAEXK,MAAAA,QAAQ,EAAE,IAFC;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAWD;AAGAC,EAAAA,MAAM,GAAG;AAEP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,MAAM,EACzBC,UAAD,IACE,oBAAC,SAAD;AACE,QAAA,YAAY,EAAK,KAAKV,OADxB;AAEE,QAAA,SAAS,EAAK,KAAKG,WAFrB;AAGE,QAAA,QAAQ,EAAG,KAAKG,KAAL,CAAWK,QAHxB;AAIE,QAAA,qBAAqB,EAAC;AAJxB,SAKMD,UALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAcD;;AAvCwC","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport LoginView from './components/LoginView';\nimport Auth from './components/Auth';\nimport axios from 'axios';\nimport constants from './constants.json';\n\nexport default class App extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      isAuthenticated: false,\n      someData: null,\n      message: \"\"\n    };\n  }  \n\n  onLogin = () => {\n    this.setState({ isAuthenticated: true })\n  }\n\n  onLoginFail = () => {\n    this.setState({ isAuthenticated: false });\n    console.log(\"Login failed\");\n  }\n\n  /* This function illustrates how some protected API could be accessed */\n\n\n  render() {\n\n    return (\n      <Router>\n        <Route path=\"/\" exact render={\n          (routeProps) =>\n            <LoginView\n              loginSuccess = { this.onLogin }\n              loginFail = { this.onLoginFail }\n              userInfo={ this.state.userInfo }\n              redirectPathOnSuccess=\"/example\"\n              {...routeProps}\n              />\n        } />\n      </Router>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}