{"ast":null,"code":"import axios from 'axios';\nimport constants from '../constants.json';\nlet userInfo = {\n  username: null\n};\nlet myOAuth = {\n  authenticate: (username, password, token) => {\n    return new Promise((resolve, reject) => {\n      window.open(constants.baseAddress + '/auth/google', \"_self\", {\n        auth: {\n          username: username\n        }\n      }).then(console.log).then(result => {\n        userInfo = {\n          username: username\n        };\n        resolve();\n      }).catch(error => {\n        console.log(error);\n        reject();\n      });\n    });\n  },\n  getAxiosAuth: () => {\n    return {\n      auth: userInfo\n    };\n  }\n};\nexport default myOAuth;","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/components/OAuth.js"],"names":["axios","constants","userInfo","username","myOAuth","authenticate","password","token","Promise","resolve","reject","window","open","baseAddress","auth","then","console","log","result","catch","error","getAxiosAuth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,IAAIC,QAAQ,GAAG;AACXC,EAAAA,QAAQ,EAAE;AADC,CAAf;AAMA,IAAIC,OAAO,GAAG;AACVC,EAAAA,YAAY,EAAE,CAACF,QAAD,EAAWG,QAAX,EAAqBC,KAArB,KAA+B;AAC3C,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,MAAAA,MAAM,CAACC,IAAP,CAAYX,SAAS,CAACY,WAAV,GAAwB,cAApC,EAAoD,OAApD,EACI;AACIC,QAAAA,IAAI,EAAE;AACFX,UAAAA,QAAQ,EAAEA;AADR;AADV,OADJ,EAKOY,IALP,CAKYC,OAAO,CAACC,GALpB,EAKyBF,IALzB,CAK8BG,MAAM,IAAI;AAChChB,QAAAA,QAAQ,GAAG;AACPC,UAAAA,QAAQ,EAAEA;AADH,SAAX;AAGAM,QAAAA,OAAO;AACV,OAVL,EAUOU,KAVP,CAUaC,KAAK,IACV;AACEJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAV,QAAAA,MAAM;AACP,OAdT;AAeK,KAhBA,CAAP;AAiBA,GAnBQ;AAoBVW,EAAAA,YAAY,EAAE,MAAM;AAChB,WAAO;AACLP,MAAAA,IAAI,EAAEZ;AADD,KAAP;AAGD;AAxBO,CAAd;AA6BA,eAAeE,OAAf","sourcesContent":["import axios from 'axios';\nimport constants from '../constants.json';\n\nlet userInfo = {\n    username: null,\n  }\n\n\n\nlet myOAuth = {\n    authenticate: (username, password, token) => {      \n      return new Promise((resolve, reject) => {\n        window.open(constants.baseAddress + '/auth/google', \"_self\",\n            {\n                auth: {\n                    username: username,\n                      }\n            }).then(console.log).then(result => {\n                userInfo = {\n                    username: username,\n                    }; \n                resolve();\n            }).catch(error => \n                {\n                  console.log(error);\n                  reject();\n                });\n            }\n    )},\n    getAxiosAuth: () => {\n        return {\n          auth: userInfo,\n        }\n      } \n}\n\n\n\nexport default myOAuth;"]},"metadata":{},"sourceType":"module"}