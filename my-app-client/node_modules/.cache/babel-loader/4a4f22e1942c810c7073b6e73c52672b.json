{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyen/Desktop/my-app/src/components/PostInfo.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport constants from '../constants.json';\nexport default class PostInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      axios.get(constants.baseAddress + \"/post\").then(res => {\n        console.log(res.data);\n        this.setState({\n          post: res.data\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      post: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: i.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), this.state.post.filter(i => i.name.toLowerCase().indexOf(this.props.search.toLowerCase()) !== -1).map(post => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: 'http://localhost:4000/' + post.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), post.title))));\n  }\n\n}","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/components/PostInfo.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","axios","constants","PostInfo","constructor","props","componentDidMount","get","baseAddress","then","res","console","log","data","setState","post","catch","error","state","render","i","id","filter","name","toLowerCase","indexOf","search","map","image","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAGA,eAAe,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAC9CQ,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;;AADF,SAOAC,iBAPA,GAOoB,MAAM;AACxBL,MAAAA,KAAK,CAACM,GAAN,CAAUL,SAAS,CAACM,WAAV,GAAwB,OAAlC,EACGC,IADH,CACQC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,aAAKC,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAEL,GAAG,CAACG;AAAZ,SAAd;AACD,OAJH,EAKGG,KALH,CAKSC,KAAK,IAAIN,OAAO,CAACC,GAAR,CAAYK,KAAZ,CALlB;AAMD,KAdD;;AAEE,SAAKC,KAAL,GAAa;AACXH,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAYDI,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEC,CAAC,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAKH,KAAL,CAAWH,IAAX,CAAgBO,MAAhB,CAAuBF,CAAC,IAAIA,CAAC,CAACG,IAAF,CAAOC,WAAP,GAAqBC,OAArB,CAA6B,KAAKpB,KAAL,CAAWqB,MAAX,CAAkBF,WAAlB,EAA7B,MAAkE,CAAC,CAA/F,EACDG,GADC,CACGZ,IAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACM,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmB;AAAM,MAAA,GAAG,EAAE,2BAA2BN,IAAI,CAACa,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB,CAAL,EAAuFb,IAAI,CAACc,KAA5F,CADX,CAFH,CAHJ,CADF;AAYD;;AAjC6C","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport constants from '../constants.json';\n\n\nexport default class PostInfo extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      post: [],\n    };\n  }  \n  \n  componentDidMount = () => {\n    axios.get(constants.baseAddress + \"/post\")\n      .then(res => {\n        console.log(res.data);\n        this.setState({ post: res.data });\n      })\n      .catch(error => console.log(error));\n  }\n\n\n  render() {\n\n    return (\n      <div>\n          {\n     \n          <div >\n            <div key={i.id}/>\n            {this.state.post.filter(i => i.name.toLowerCase().indexOf(this.props.search.toLowerCase()) !== -1\n          ).map(post => <div><div key={post.id}><img  src={'http://localhost:4000/' + post.image}></img></div>{post.title}</div>)}\n          </div>\n          }\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}