{"ast":null,"code":"import axios from'axios';import constants from'../constants.json';var myAuth={authenticate:function authenticate(username,password,token){return new Promise(function(resolve,reject){axios.get(constants.baseAddress+'/users/:id',{auth:{username:username,password:password}}).then(function(e){var token=e.data.token;var config={headers:{Authorization:\"Bearer \".concat(token)}};axios.get(constants.baseAddress+'/users/signin',config).then(function(res){resolve(res.data);}).catch(function(error){console.log(error);reject();});});});}};export default myAuth;","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/components/Auth.js"],"names":["axios","constants","myAuth","authenticate","username","password","token","Promise","resolve","reject","get","baseAddress","auth","then","e","data","config","headers","Authorization","res","catch","error","console","log"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CAIA,GAAIC,CAAAA,MAAM,CAAG,CACTC,YAAY,CAAE,sBAACC,QAAD,CAAWC,QAAX,CAAqBC,KAArB,CAA+B,CAC3C,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCT,KAAK,CAACU,GAAN,CAAUT,SAAS,CAACU,WAAV,CAAwB,YAAlC,CACI,CACEC,IAAI,CAAE,CACNR,QAAQ,CAAEA,QADJ,CAENC,QAAQ,CAAEA,QAFJ,CADR,CADJ,EAMOQ,IANP,CAMY,SAACC,CAAD,CAAK,CACb,GAAMR,CAAAA,KAAK,CAAGQ,CAAC,CAACC,IAAF,CAAOT,KAArB,CACA,GAAMU,CAAAA,MAAM,CAAG,CACXC,OAAO,CAAE,CAAEC,aAAa,kBAAYZ,KAAZ,CAAf,CADE,CAAf,CAGAN,KAAK,CAACU,GAAN,CAAUT,SAAS,CAACU,WAAV,CAAwB,eAAlC,CACIK,MADJ,EAEEH,IAFF,CAEO,SAAAM,GAAG,CAAI,CACVX,OAAO,CAACW,GAAG,CAACJ,IAAL,CAAP,CACH,CAJD,EAIGK,KAJH,CAIS,SAAAC,KAAK,CACV,CACEC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACAZ,MAAM,GACP,CARL,EASC,CApBL,EAqBH,CAtBQ,CAAP,CAuBD,CAzBQ,CAAb,CA6BA,cAAeP,CAAAA,MAAf","sourcesContent":["import axios from 'axios';\nimport constants from '../constants.json';\n\n\n\nlet myAuth = {\n    authenticate: (username, password, token) => {      \n      return new Promise((resolve, reject) => {\n        axios.get(constants.baseAddress + '/users/:id', \n            {\n              auth: {\n              username: username,\n              password: password,\n            }\n            }).then((e)=>{\n            const token = e.data.token;\n            const config = {\n                headers: { Authorization: `Bearer ${token}` }\n            };\n            axios.get(constants.baseAddress + '/users/signin',\n                config\n            ).then(res => {\n                resolve(res.data);\n            }).catch(error => \n                {\n                  console.log(error);\n                  reject();\n                });\n            })\n    })\n    }\n}\n\n\nexport default myAuth;"]},"metadata":{},"sourceType":"module"}