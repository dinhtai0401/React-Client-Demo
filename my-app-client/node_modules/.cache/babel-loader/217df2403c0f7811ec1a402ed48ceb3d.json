{"ast":null,"code":"import axios from 'axios';\nimport constants from '../constants.json';\nlet userInfo = {\n  username: null,\n  password: null,\n  token: null\n};\nlet myAuth = {\n  authenticate: (username, password) => {\n    return new Promise((resolve, reject) => {\n      axios.get(constants.baseAddress + '/users/:id', {\n        auth: {\n          username: username,\n          password: password\n        }\n      }).then(f => {\n        const token = f.data.token;\n\n        if (token) {\n          axios.defaults.headers.common['Authentication'] = `Bearer ${token}`;\n        } else {\n          delete axios.defaults.headers.common['Authentication'];\n        }\n\n        console.log(token);\n      }).then(result => {\n        userInfo = {\n          username: username,\n          password: password,\n          token: token\n        };\n        resolve();\n      }).catch(error => {\n        console.log(error);\n        reject();\n      });\n    });\n  },\n  getAxiosAuth: () => {\n    return {\n      auth: userInfo\n    };\n  }\n};\nexport default myAuth;","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/components/Auth.js"],"names":["axios","constants","userInfo","username","password","token","myAuth","authenticate","Promise","resolve","reject","get","baseAddress","auth","then","f","data","defaults","headers","common","console","log","result","catch","error","getAxiosAuth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,IADG;AAEbC,EAAAA,QAAQ,EAAE,IAFG;AAGbC,EAAAA,KAAK,EAAE;AAHM,CAAf;AAQA,IAAIC,MAAM,GAAG;AACTC,EAAAA,YAAY,EAAE,CAACJ,QAAD,EAAWC,QAAX,KAAwB;AACpC,WAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCV,MAAAA,KAAK,CAACW,GAAN,CAAUV,SAAS,CAACW,WAAV,GAAwB,YAAlC,EACE;AACIC,QAAAA,IAAI,EAAE;AACNV,UAAAA,QAAQ,EAAEA,QADJ;AAENC,UAAAA,QAAQ,EAAEA;AAFJ;AADV,OADF,EAOGU,IAPH,CAOUC,CAAD,IAAO;AACZ,cAAMV,KAAK,GAAGU,CAAC,CAACC,IAAF,CAAOX,KAArB;;AACA,YAAIA,KAAJ,EAAW;AACPL,UAAAA,KAAK,CAACiB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,gBAA9B,IAAmD,UAAUd,KAAO,EAApE;AACA,SAFJ,MAEU;AACN,iBAAOL,KAAK,CAACiB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,gBAA9B,CAAP;AACH;;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACD,OAfH,EAgBGS,IAhBH,CAgBQQ,MAAM,IAAI;AACZpB,QAAAA,QAAQ,GAAG;AACTC,UAAAA,QAAQ,EAAEA,QADD;AAETC,UAAAA,QAAQ,EAAEA,QAFD;AAGTC,UAAAA,KAAK,EAAEA;AAHE,SAAX;AAKFI,QAAAA,OAAO;AACR,OAvBH,EAwBGc,KAxBH,CAwBSC,KAAK,IACV;AACEJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAd,QAAAA,MAAM;AACP,OA5BL;AA8BD,KA/BM,CAAP;AAgCD,GAlCQ;AAmCTe,EAAAA,YAAY,EAAE,MAAM;AAClB,WAAO;AACLZ,MAAAA,IAAI,EAAEX;AADD,KAAP;AAGD;AAvCQ,CAAb;AA0CA,eAAeI,MAAf","sourcesContent":["import axios from 'axios';\nimport constants from '../constants.json';\n\nlet userInfo = {\n  username: null,\n  password: null,\n  token: null,\n}\n\n\n\nlet myAuth = {\n    authenticate: (username, password) => {      \n      return new Promise((resolve, reject) => {\n        axios.get(constants.baseAddress + '/users/:id', \n          {\n              auth: {\n              username: username,\n              password: password\n            }\n          })\n          .then( (f) => {\n            const token = f.data.token;\n            if (token) {\n                axios.defaults.headers.common['Authentication'] = `Bearer ${ token }`\n               } else {\n                delete axios.defaults.headers.common['Authentication']\n            }\n            console.log(token);\n          })\n          .then(result => {\n              userInfo = {\n                username: username,\n                password: password,\n                token: token\n                };\n            resolve();\n          })\n          .catch(error => \n            {\n              console.log(error);\n              reject();\n            }\n          )\n      });\n    },\n    getAxiosAuth: () => {\n      return {\n        auth: userInfo\n      }\n    } \n}\n\nexport default myAuth;"]},"metadata":{},"sourceType":"module"}