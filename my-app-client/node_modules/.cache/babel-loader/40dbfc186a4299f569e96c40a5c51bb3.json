{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyen/Desktop/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport LoginView from './components/LoginView';\nimport Auth from './components/Auth';\nimport axios from 'axios';\nimport constants from './constants.json';\nimport PostInfo from './components/PostInfo';\nimport PostView from './components/PostView';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogin = () => {\n      this.setState({\n        isAuthenticated: true\n      });\n    };\n\n    this.onLoginFail = () => {\n      this.setState({\n        isAuthenticated: false\n      });\n      console.log(\"Login failed\");\n    };\n\n    this.state = {\n      isAuthenticated: false,\n      someData: null,\n      message: \"\"\n    };\n  }\n\n  /* This function illustrates how some protected API could be accessed */\n  render() {\n    console.log(this.state.isAuthenticated);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/login\",\n      exact: true,\n      render: routeProps => React.createElement(LoginView, Object.assign({\n        isAuthenticated: this.state.isAuthenticated,\n        loginSuccess: this.onLogin,\n        loginFail: this.onLoginFail,\n        redirectPathOnSuccess: \"/\"\n      }, routeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/mainpage\",\n      exact: true,\n      render: routeProps => React.createElement(PostInfo, Object.assign({\n        isAuthenticated: this.state.isAuthenticated\n      }, routeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: routeProps => React.createElement(PostView, Object.assign({}, routeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","LoginView","Auth","axios","constants","PostInfo","PostView","App","constructor","props","onLogin","setState","isAuthenticated","onLoginFail","console","log","state","someData","message","render","routeProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAGA,eAAe,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AACzCY,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;;AADF,SAUAC,OAVA,GAUU,MAAM;AACd,WAAKC,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACD,KAZD;;AAAA,SAcAC,WAdA,GAcc,MAAM;AAClB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAjBD;;AAEE,SAAKC,KAAL,GAAa;AACXJ,MAAAA,eAAe,EAAE,KADN;AAEXK,MAAAA,QAAQ,EAAE,IAFC;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAYD;AAGAC,EAAAA,MAAM,GAAG;AACPL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWJ,eAAvB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,MAAM,EAC9BQ,UAAD,IACE,oBAAC,SAAD;AACE,QAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWJ,eAD9B;AAEE,QAAA,YAAY,EAAK,KAAKF,OAFxB;AAGE,QAAA,SAAS,EAAK,KAAKG,WAHrB;AAIE,QAAA,qBAAqB,EAAC;AAJxB,SAKMO,UALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAYE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,MAAM,EACjCA,UAAD,IAAgB,oBAAC,QAAD;AAAU,QAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWJ;AAAtC,SAA2DQ,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAeE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,MAAM,EACzBA,UAAD,IAAgB,oBAAC,QAAD,oBAAcA,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADA,CADF;AAwBD;;AAlDwC","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport LoginView from './components/LoginView';\nimport Auth from './components/Auth';\nimport axios from 'axios';\nimport constants from './constants.json';\nimport PostInfo from './components/PostInfo';\nimport PostView from './components/PostView';\n\n\nexport default class App extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      isAuthenticated: false,\n      someData: null,\n      message: \"\",\n    };\n  }  \n\n\n  onLogin = () => {\n    this.setState({ isAuthenticated: true })\n  }\n\n  onLoginFail = () => {\n    this.setState({ isAuthenticated: false });\n    console.log(\"Login failed\");\n  }\n\n  /* This function illustrates how some protected API could be accessed */\n\n\n  render() {\n    console.log(this.state.isAuthenticated)\n    return (\n      <div>\n      <Router>\n        \n        <Route path=\"/login\" exact render={\n          (routeProps) =>\n            <LoginView\n              isAuthenticated={this.state.isAuthenticated}\n              loginSuccess = { this.onLogin }\n              loginFail = { this.onLoginFail }\n              redirectPathOnSuccess=\"/\"\n              {...routeProps}\n            />\n        } />\n        <Route path=\"/mainpage\" exact render={\n          (routeProps) => <PostInfo isAuthenticated={this.state.isAuthenticated} {...routeProps} />\n        }/>\n        <Route path=\"/\" exact render={\n          (routeProps) => <PostView {...routeProps} />\n        }/>\n        \n      </Router>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}