{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyen/Desktop/my-app/src/components/PostInfo.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport constants from '../constants.json';\nexport default class PostInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      axios.get(constants.baseAddress + \"/post\").then(res => {\n        console.log(res.data);\n        this.setState({\n          post: res.data\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        postFilter: e.target.value.trim().toLowerCase()\n      });\n    };\n\n    this.changedRole = e => {\n      this.setState({\n        roleFilter: e.target.value\n      });\n    };\n\n    this.state = {\n      post: [],\n      postFilter: \"\",\n      roleFilter: null,\n      isLoading: false\n    };\n  }\n\n  render() {\n    let text = this.state.post;\n\n    if (this.state.postFilter) {\n      text = text.filter(info => info.role.toLowerCase().match(this.state.postFilter));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"search\",\n      value: this.state.postFilter,\n      onChange: this.handleChange.bind(this),\n      placeholder: \"Search by Role\",\n      name: \"device\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      onChange: this.changedRole,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), text.map(info => React.createElement(\"option\", {\n      value: info.category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, info.category))), text.filter(info => this.state.postFilter ? info.role.includes(this.state.postFilter) : true).map(i => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, i.role, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, i.image.map(url => React.createElement(\"img\", {\n      src: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, i.title), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, i.description), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, i.category), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, i.location), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, i.price), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, i.dataOfPosting), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, i.delivery), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, i.SellerOfName))));\n  }\n\n}","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/components/PostInfo.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","axios","constants","PostInfo","constructor","props","componentDidMount","get","baseAddress","then","res","console","log","data","setState","post","catch","error","handleChange","e","postFilter","target","value","trim","toLowerCase","changedRole","roleFilter","state","isLoading","render","text","filter","info","role","match","bind","map","category","includes","i","image","url","title","description","location","price","dataOfPosting","delivery","SellerOfName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport constants from '../constants.json';\n\n\nexport default class PostInfo extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      post: [],\n      postFilter: \"\",\n      roleFilter: null,\n      isLoading: false,\n    };\n  }  \n  \n  componentDidMount = () => {\n    axios.get(constants.baseAddress + \"/post\")\n      .then(res => {\n        console.log(res.data);\n        this.setState({ post: res.data });\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleChange = (e) => {\n    this.setState({postFilter: e.target.value.trim().toLowerCase()});\n  }\n\n  changedRole = e => {\n    this.setState({ roleFilter: e.target.value })\n  }\n\n  render() {\n    let text = this.state.post;\n    if (this.state.postFilter) {\n        text = text.filter(info => info.role.toLowerCase().match(this.state.postFilter));\n    }\n    return (\n      <div>\n        <input type=\"search\"  value={this.state.postFilter} onChange={this.handleChange.bind(this)} placeholder=\"Search by Role\" name=\"device\" />\n        <select onChange={this.changedRole}>\n                        <option value={''}></option>\n                        {text.map(info => (\n                            <option value={info.category}>{info.category}</option>\n                        ))}\n                    </select>\n        \n        {text.filter(info => this.state.postFilter ? info.role.includes(this.state.postFilter) : true).map(i => (\n                        <div>\n                            {i.role}\n                            <div>{i.image.map(url => <img src={url}></img>)}</div>\n                            <div>{i.title}</div>\n                            <div>{i.description}</div>\n                            <div>{i.category}</div>\n                            <div>{i.location}</div>\n                            <div>{i.price}</div>\n                            <div>{i.dataOfPosting}</div>\n                            <div>{i.delivery}</div>\n                            <div>{i.SellerOfName}</div>\n                        </div>\n                    ))}\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}