{"ast":null,"code":"import axios from 'axios';\nimport constants from '../constants.json';\nlet userInfo = {\n  username: null,\n  password: null\n};\nlet myAuth = {\n  authenticate: (username, password, id, email) => {\n    return new Promise((resolve, reject) => {\n      axios.get(constants.baseAddress + '/users/:id', {\n        auth: {\n          username: username,\n          password: password\n        }\n      }).then(serverResponse => {\n        const token = \"2222\";\n\n        if (token) {\n          // sets token as an included header for all subsequent api requests\n          this.defaults.headers.common.token = this.setToken(token);\n          return token;\n        } else {\n          return false;\n        }\n      }).then(result => {\n        userInfo = {\n          username: username,\n          password: password\n        };\n        resolve();\n      }).catch(error => {\n        console.log(error);\n        reject();\n      });\n    });\n  },\n  getAxiosAuth: () => {\n    return {\n      auth: userInfo\n    };\n  }\n};\nexport default myAuth;","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/components/Auth.js"],"names":["axios","constants","userInfo","username","password","myAuth","authenticate","id","email","Promise","resolve","reject","get","baseAddress","auth","then","serverResponse","token","defaults","headers","common","setToken","result","catch","error","console","log","getAxiosAuth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,IADG;AAEbC,EAAAA,QAAQ,EAAE;AAFG,CAAf;AAKA,IAAIC,MAAM,GAAG;AACTC,EAAAA,YAAY,EAAE,CAACH,QAAD,EAAWC,QAAX,EAAqBG,EAArB,EAAyBC,KAAzB,KAAmC;AAC/C,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCX,MAAAA,KAAK,CAACY,GAAN,CAAUX,SAAS,CAACY,WAAV,GAAwB,YAAlC,EACE;AACIC,QAAAA,IAAI,EAAE;AACNX,UAAAA,QAAQ,EAAEA,QADJ;AAENC,UAAAA,QAAQ,EAAEA;AAFJ;AADV,OADF,EAMKW,IANL,CAMWC,cAAD,IAAoB;AAC1B,cAAMC,KAAK,GAAG,MAAd;;AACA,YAAGA,KAAH,EAAU;AACR;AACA,eAAKC,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6BH,KAA7B,GAAqC,KAAKI,QAAL,CAAcJ,KAAd,CAArC;AACA,iBAAOA,KAAP;AACD,SAJD,MAIO;AACL,iBAAO,KAAP;AACD;AAAC,OAdN,EAeGF,IAfH,CAeQO,MAAM,IAAI;AACZpB,QAAAA,QAAQ,GAAG;AACTC,UAAAA,QAAQ,EAAEA,QADD;AAETC,UAAAA,QAAQ,EAAEA;AAFD,SAAX;AAIFM,QAAAA,OAAO;AACR,OArBH,EAsBGa,KAtBH,CAsBSC,KAAK,IACV;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAb,QAAAA,MAAM;AACP,OA1BL;AA4BD,KA7BM,CAAP;AA8BD,GAhCQ;AAiCTgB,EAAAA,YAAY,EAAE,MAAM;AAClB,WAAO;AACLb,MAAAA,IAAI,EAAEZ;AADD,KAAP;AAGD;AArCQ,CAAb;AAwCA,eAAeG,MAAf","sourcesContent":["import axios from 'axios';\nimport constants from '../constants.json';\n\nlet userInfo = {\n  username: null,\n  password: null,\n}\n\nlet myAuth = {\n    authenticate: (username, password, id ,email) => {      \n      return new Promise((resolve, reject) => {\n        axios.get(constants.baseAddress + '/users/:id', \n          {\n              auth: {\n              username: username,\n              password: password\n            }\n          }).then((serverResponse) => {\n            const token = \"2222\";\n            if(token) {\n              // sets token as an included header for all subsequent api requests\n              this.defaults.headers.common.token = this.setToken(token)\n              return token\n            } else {\n              return false\n            }})\n          .then(result => {\n              userInfo = {\n                username: username,\n                password: password,\n                };\n            resolve();\n          })\n          .catch(error => \n            {\n              console.log(error);\n              reject();\n            }\n          )\n      });\n    },\n    getAxiosAuth: () => {\n      return {\n        auth: userInfo\n      }\n    } \n}\n\nexport default myAuth;"]},"metadata":{},"sourceType":"module"}