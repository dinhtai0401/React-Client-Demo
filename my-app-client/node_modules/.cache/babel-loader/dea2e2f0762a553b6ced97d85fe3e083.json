{"ast":null,"code":"import axios from 'axios';\nimport constants from '../constants.json';\nlet userInfo = {\n  username: null,\n  password: null,\n  token: null\n};\nlet myAuth = {\n  authenticate: (username, password, token) => {\n    return new Promise((resolve, reject) => {\n      axios.get(constants.baseAddress + '/users/:id', {\n        auth: {\n          username: username,\n          password: password\n        }\n      }).then(e => {\n        axios.get(constants.baseAddress + '/users/signin', {\n          auth: {\n            jwt_payload: e.data.token\n          }\n        });\n      }).then(result => {\n        userInfo = {\n          username: username,\n          password: password\n        };\n      }).then(result => {\n        jwt_payload = token;\n      }).catch(error => {\n        console.log(error);\n        reject();\n      }); //  axios.get(constants.baseAddress + '/users/signin',{\n      // })\n    });\n  },\n  getAxiosAuth: () => {\n    return {\n      auth: userInfo\n    };\n  }\n};\nexport default myAuth;","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/components/Auth.js"],"names":["axios","constants","userInfo","username","password","token","myAuth","authenticate","Promise","resolve","reject","get","baseAddress","auth","then","e","jwt_payload","data","result","catch","error","console","log","getAxiosAuth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,IADG;AAEbC,EAAAA,QAAQ,EAAE,IAFG;AAGbC,EAAAA,KAAK,EAAG;AAHK,CAAf;AAUA,IAAIC,MAAM,GAAG;AACTC,EAAAA,YAAY,EAAE,CAACJ,QAAD,EAAWC,QAAX,EAAqBC,KAArB,KAA+B;AAC3C,WAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCV,MAAAA,KAAK,CAACW,GAAN,CAAUV,SAAS,CAACW,WAAV,GAAwB,YAAlC,EACE;AACIC,QAAAA,IAAI,EAAE;AACNV,UAAAA,QAAQ,EAAEA,QADJ;AAENC,UAAAA,QAAQ,EAAEA;AAFJ;AADV,OADF,EASKU,IATL,CASWC,CAAD,IAAK;AACXf,QAAAA,KAAK,CAACW,GAAN,CAAUV,SAAS,CAACW,WAAV,GAAwB,eAAlC,EACA;AACIC,UAAAA,IAAI,EAAE;AACNG,YAAAA,WAAW,EAAED,CAAC,CAACE,IAAF,CAAOZ;AADd;AADV,SADA;AAOD,OAjBH,EAkBGS,IAlBH,CAkBQI,MAAM,IAAI;AACVhB,QAAAA,QAAQ,GAAG;AACPC,UAAAA,QAAQ,EAAEA,QADH;AAEPC,UAAAA,QAAQ,EAAEA;AAFH,SAAX;AAKL,OAxBH,EAwBKU,IAxBL,CAwBUI,MAAM,IAAI;AACZF,QAAAA,WAAW,GAAGX,KAAd;AACL,OA1BH,EA2BGc,KA3BH,CA2BSC,KAAK,IACV;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAV,QAAAA,MAAM;AACP,OA/BL,EADsC,CAoCxC;AAEC;AACF,KAvCQ,CAAP;AAwCD,GA1CQ;AA2CTa,EAAAA,YAAY,EAAE,MAAM;AAClB,WAAO;AACLV,MAAAA,IAAI,EAAEX;AADD,KAAP;AAGD;AA/CQ,CAAb;AAoDA,eAAeI,MAAf","sourcesContent":["import axios from 'axios';\nimport constants from '../constants.json';\n\nlet userInfo = {\n  username: null,\n  password: null,\n  token : null,\n}\n\n\n\n\n\nlet myAuth = {\n    authenticate: (username, password, token) => {      \n      return new Promise((resolve, reject) => {\n        axios.get(constants.baseAddress + '/users/:id', \n          {\n              auth: {\n              username: username,\n              password: password,\n              \n            }\n            \n              \n          }).then((e)=>{\n            axios.get(constants.baseAddress + '/users/signin',\n            {\n                auth: {\n                jwt_payload: e.data.token\n                }\n            }\n            )\n          })\n          .then(result => {\n                userInfo = {\n                    username: username,\n                    password: password,\n                    \n                    };\n          }).then(result => {\n                jwt_payload = token\n          })\n          .catch(error => \n            {\n              console.log(error);\n              reject();\n            }\n          )\n          \n          \n      //  axios.get(constants.baseAddress + '/users/signin',{\n            \n       // })\n    })\n    },\n    getAxiosAuth: () => {\n      return {\n        auth: userInfo,\n      }\n    } \n}\n\n\n\nexport default myAuth;"]},"metadata":{},"sourceType":"module"}