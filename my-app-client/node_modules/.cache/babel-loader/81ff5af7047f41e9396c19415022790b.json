{"ast":null,"code":"import axios from 'axios';\nimport constants from '../constants.json';\nlet userInfo = {\n  username: null,\n  password: null\n};\nlet myAuth = {\n  authenticate: (username, password, token) => {\n    return new Promise((resolve, reject) => {\n      axios.get(constants.baseAddress + '/users/:id', {\n        auth: {\n          username: username,\n          password: password\n        }\n      }).then(console.log).then(result => {\n        userInfo = {\n          username: username,\n          password: password\n        };\n        resolve();\n      }).then(e => {\n        const token = e.data.token;\n        const config = {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        };\n        axios.get(constants.baseAddress + '/users/signin', config).then(console.log).catch(error => {\n          console.log(error);\n          reject();\n        });\n      });\n    });\n  },\n  getAxiosAuth: () => {\n    return {\n      auth: userInfo\n    };\n  }\n};\nexport default myAuth;","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/components/Auth.js"],"names":["axios","constants","userInfo","username","password","myAuth","authenticate","token","Promise","resolve","reject","get","baseAddress","auth","then","console","log","result","e","data","config","headers","Authorization","catch","error","getAxiosAuth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,IADG;AAEbC,EAAAA,QAAQ,EAAE;AAFG,CAAf;AAOA,IAAIC,MAAM,GAAG;AACTC,EAAAA,YAAY,EAAE,CAACH,QAAD,EAAWC,QAAX,EAAqBG,KAArB,KAA+B;AAC3C,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCV,MAAAA,KAAK,CAACW,GAAN,CAAUV,SAAS,CAACW,WAAV,GAAwB,YAAlC,EACI;AACEC,QAAAA,IAAI,EAAE;AACNV,UAAAA,QAAQ,EAAEA,QADJ;AAENC,UAAAA,QAAQ,EAAEA;AAFJ;AADR,OADJ,EAMOU,IANP,CAMYC,OAAO,CAACC,GANpB,EAMyBF,IANzB,CAM8BG,MAAM,IAAI;AAClCf,QAAAA,QAAQ,GAAG;AACPC,UAAAA,QAAQ,EAAEA,QADH;AAEPC,UAAAA,QAAQ,EAAEA;AAFH,SAAX;AAIAK,QAAAA,OAAO;AACV,OAZH,EAYKK,IAZL,CAYWI,CAAD,IAAK;AACX,cAAMX,KAAK,GAAGW,CAAC,CAACC,IAAF,CAAOZ,KAArB;AACA,cAAMa,MAAM,GAAG;AACXC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAG,UAASf,KAAM;AAAjC;AADE,SAAf;AAGAP,QAAAA,KAAK,CAACW,GAAN,CAAUV,SAAS,CAACW,WAAV,GAAwB,eAAlC,EACIQ,MADJ,EAEEN,IAFF,CAEOC,OAAO,CAACC,GAFf,EAEoBO,KAFpB,CAE0BC,KAAK,IAC3B;AACET,UAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACAd,UAAAA,MAAM;AACP,SANL;AAOC,OAxBL;AAyBH,KA1BQ,CAAP;AA2BD,GA7BQ;AA8BTe,EAAAA,YAAY,EAAE,MAAM;AAClB,WAAO;AACLZ,MAAAA,IAAI,EAAEX;AADD,KAAP;AAGD;AAlCQ,CAAb;AAuCA,eAAeG,MAAf","sourcesContent":["import axios from 'axios';\nimport constants from '../constants.json';\n\nlet userInfo = {\n  username: null,\n  password: null,\n}\n\n\n\nlet myAuth = {\n    authenticate: (username, password, token) => {      \n      return new Promise((resolve, reject) => {\n        axios.get(constants.baseAddress + '/users/:id', \n            {\n              auth: {\n              username: username,\n              password: password,\n            }\n            }).then(console.log).then(result => {\n              userInfo = {\n                  username: username,\n                  password: password,\n                  }; \n              resolve();\n          }).then((e)=>{\n            const token = e.data.token;\n            const config = {\n                headers: { Authorization: `Bearer ${token}` }\n            };\n            axios.get(constants.baseAddress + '/users/signin',\n                config\n            ).then(console.log).catch(error => \n                {\n                  console.log(error);\n                  reject();\n                });\n            })\n    })\n    },\n    getAxiosAuth: () => {\n      return {\n        auth: userInfo,\n      }\n    } \n}\n\n\n\nexport default myAuth;"]},"metadata":{},"sourceType":"module"}