{"ast":null,"code":"import axios from 'axios';\nimport constants from '../constants.json';\nlet userInfo = {\n  username: null,\n  password: null\n};\nlet myAuth = {\n  authenticate: (username, password) => {\n    return new Promise((resolve, reject) => {\n      axios.get(constants.baseAddress + '/users/:id', {\n        auth: {\n          username: username,\n          password: password\n        }\n      }).then(f => {\n        const token = f.data.token;\n\n        if (token) {\n          axios.defaults.headers.common['Authentication'] = `Bearer ${token}`;\n        } else {\n          delete axios.defaults.headers.common['Authentication'];\n          console.log(error);\n        }\n\n        console.log(token);\n      }).then(resolve()).then(result => {\n        userInfo = {\n          username: username,\n          password: password\n        };\n        resolve();\n      }).catch(error => {\n        console.log(error);\n        reject();\n      });\n    });\n  },\n  getAxiosAuth: () => {\n    return {\n      auth: userInfo\n    };\n  }\n};\nexport default myAuth;","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/components/Auth.js"],"names":["axios","constants","userInfo","username","password","myAuth","authenticate","Promise","resolve","reject","get","baseAddress","auth","then","f","token","data","defaults","headers","common","console","log","error","result","catch","getAxiosAuth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,IADG;AAEbC,EAAAA,QAAQ,EAAE;AAFG,CAAf;AAOA,IAAIC,MAAM,GAAG;AACTC,EAAAA,YAAY,EAAE,CAACH,QAAD,EAAWC,QAAX,KAAwB;AACpC,WAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCT,MAAAA,KAAK,CAACU,GAAN,CAAUT,SAAS,CAACU,WAAV,GAAwB,YAAlC,EACE;AACIC,QAAAA,IAAI,EAAE;AACNT,UAAAA,QAAQ,EAAEA,QADJ;AAENC,UAAAA,QAAQ,EAAEA;AAFJ;AADV,OADF,EAOGS,IAPH,CAOUC,CAAD,IAAO;AACZ,cAAMC,KAAK,GAAGD,CAAC,CAACE,IAAF,CAAOD,KAArB;;AACA,YAAIA,KAAJ,EAAW;AACPf,UAAAA,KAAK,CAACiB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,gBAA9B,IAAmD,UAAUJ,KAAO,EAApE;AACA,SAFJ,MAEU;AACN,iBAAOf,KAAK,CAACiB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,gBAA9B,CAAP;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;;AACDF,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACD,OAhBH,EAgBKF,IAhBL,CAgBUL,OAAO,EAhBjB,EAiBGK,IAjBH,CAiBQU,MAAM,IAAI;AACZrB,QAAAA,QAAQ,GAAG;AACTC,UAAAA,QAAQ,EAAEA,QADD;AAETC,UAAAA,QAAQ,EAAEA;AAFD,SAAX;AAIFI,QAAAA,OAAO;AACR,OAvBH,EAwBGgB,KAxBH,CAwBSF,KAAK,IACV;AACEF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAb,QAAAA,MAAM;AACP,OA5BL;AA8BD,KA/BM,CAAP;AAgCD,GAlCQ;AAmCTgB,EAAAA,YAAY,EAAE,MAAM;AAClB,WAAO;AACLb,MAAAA,IAAI,EAAEV;AADD,KAAP;AAGD;AAvCQ,CAAb;AA0CA,eAAeG,MAAf","sourcesContent":["import axios from 'axios';\nimport constants from '../constants.json';\n\nlet userInfo = {\n  username: null,\n  password: null,\n}\n\n\n\nlet myAuth = {\n    authenticate: (username, password) => {      \n      return new Promise((resolve, reject) => {\n        axios.get(constants.baseAddress + '/users/:id', \n          {\n              auth: {\n              username: username,\n              password: password\n            }\n          })\n          .then( (f) => {\n            const token = f.data.token;\n            if (token) {\n                axios.defaults.headers.common['Authentication'] = `Bearer ${ token }`\n               } else {\n                delete axios.defaults.headers.common['Authentication']\n                console.log(error);\n            }\n            console.log(token);\n          }).then(resolve())\n          .then(result => {\n              userInfo = {\n                username: username,\n                password: password,\n                };\n            resolve();\n          })\n          .catch(error => \n            {\n              console.log(error);\n              reject();\n            }\n          )\n      });\n    },\n    getAxiosAuth: () => {\n      return {\n        auth: userInfo\n      }\n    } \n}\n\nexport default myAuth;"]},"metadata":{},"sourceType":"module"}