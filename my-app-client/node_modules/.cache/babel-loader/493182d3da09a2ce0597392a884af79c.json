{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyen/Desktop/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport LoginView from './components/LoginView';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport Auth from './components/Auth';\nimport axios from 'axios';\nimport constants from './constants.json';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogin = () => {\n      this.setState({\n        isAuthenticated: true\n      });\n    };\n\n    this.onLoginFail = () => {\n      this.setState({\n        isAuthenticated: false\n      });\n      console.log(\"Login failed\");\n    };\n\n    this.loadProtectedData = () => {\n      axios.get(constants.baseAddress + '/hello-protected', Auth.getAxiosAuth()).then(results => {\n        this.setState({\n          someData: results.data\n        });\n      });\n    };\n\n    this.state = {\n      isAuthenticated: false,\n      someData: null\n    };\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: routeProps => React.createElement(LoginView, Object.assign({\n        loginSuccess: this.onLogin,\n        loginFail: this.onLoginFail,\n        userInfo: this.state.userInfo,\n        redirectPathOnSuccess: \"/example\"\n      }, routeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(ProtectedRoute, {\n      isAuthenticated: this.state.isAuthenticated,\n      path: \"/example\",\n      exact: true,\n      render: routeProps => React.createElement(ExampleProtectedView, {\n        loadProtectedData: this.loadProtectedData,\n        someData: this.state.someData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","LoginView","ProtectedRoute","Auth","axios","constants","App","constructor","props","onLogin","setState","isAuthenticated","onLoginFail","console","log","loadProtectedData","get","baseAddress","getAxiosAuth","then","results","someData","data","state","render","routeProps","userInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,eAAe,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AACzCU,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;;AADF,SAQAC,OARA,GAQU,MAAM;AACd,WAAKC,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACD,KAVD;;AAAA,SAYAC,WAZA,GAYc,MAAM;AAClB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAfD;;AAAA,SAkBAC,iBAlBA,GAkBoB,MAAM;AACxBX,MAAAA,KAAK,CAACY,GAAN,CAAUX,SAAS,CAACY,WAAV,GAAwB,kBAAlC,EAAsDd,IAAI,CAACe,YAAL,EAAtD,EAA2EC,IAA3E,CAAgFC,OAAO,IAAI;AACzF,aAAKV,QAAL,CAAc;AAAEW,UAAAA,QAAQ,EAAED,OAAO,CAACE;AAApB,SAAd;AACD,OAFD;AAGD,KAtBD;;AAEE,SAAKC,KAAL,GAAa;AACXZ,MAAAA,eAAe,EAAE,KADN;AAEXU,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAmBDG,EAAAA,MAAM,GAAG;AAEP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,MAAM,EACzBC,UAAD,IACE,oBAAC,SAAD;AACE,QAAA,YAAY,EAAK,KAAKhB,OADxB;AAEE,QAAA,SAAS,EAAK,KAAKG,WAFrB;AAGE,QAAA,QAAQ,EAAG,KAAKW,KAAL,CAAWG,QAHxB;AAIE,QAAA,qBAAqB,EAAC;AAJxB,SAKMD,UALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE,oBAAC,cAAD;AAAgB,MAAA,eAAe,EAAE,KAAKF,KAAL,CAAWZ,eAA5C;AAA6D,MAAA,IAAI,EAAC,UAAlE;AAA6E,MAAA,KAAK,MAAlF;AAAmF,MAAA,MAAM,EACpFc,UAAD,IACE,oBAAC,oBAAD;AACE,QAAA,iBAAiB,EAAG,KAAKV,iBAD3B;AAEE,QAAA,QAAQ,EAAG,KAAKQ,KAAL,CAAWF,QAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAsBD;;AAnDwC","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport LoginView from './components/LoginView';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport Auth from './components/Auth';\nimport axios from 'axios';\nimport constants from './constants.json';\n\nexport default class App extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      isAuthenticated: false,\n      someData: null\n    };\n  }  \n\n  onLogin = () => {\n    this.setState({ isAuthenticated: true })\n  }\n\n  onLoginFail = () => {\n    this.setState({ isAuthenticated: false });\n    console.log(\"Login failed\");\n  }\n\n  /* This function illustrates how some protected API could be accessed */\n  loadProtectedData = () => {\n    axios.get(constants.baseAddress + '/hello-protected', Auth.getAxiosAuth()).then(results => {\n      this.setState({ someData: results.data });\n    })\n  }\n\n\n  render() {\n\n    return (\n      <Router>\n        <Route path=\"/\" exact render={\n          (routeProps) =>\n            <LoginView\n              loginSuccess = { this.onLogin }\n              loginFail = { this.onLoginFail }\n              userInfo={ this.state.userInfo }\n              redirectPathOnSuccess=\"/example\"\n              {...routeProps}\n              />\n        } />\n        <ProtectedRoute isAuthenticated={this.state.isAuthenticated} path=\"/example\" exact render={\n            (routeProps) =>\n              <ExampleProtectedView\n                loadProtectedData={ this.loadProtectedData }\n                someData={ this.state.someData }\n                />\n          }>          \n        </ProtectedRoute>\n      </Router>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}