{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyen/Desktop/my-app/src/components/PostInfo.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport constants from '../constants.json';\nexport default class PostInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      axios.get(constants.baseAddress + \"/post\").then(res => {\n        console.log(res.data);\n        this.setState({\n          post: res.data\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        postFilter: e.target.value.trim().toLowerCase()\n      });\n    };\n\n    this.changedRole = e => {\n      this.setState({\n        roleFilter: e.target.value\n      });\n    };\n\n    this.state = {\n      post: [],\n      postFilter: \"\",\n      roleFilter: null,\n      isLoading: false\n    };\n  }\n\n  render() {\n    if (this.state.selectedValue === 'name') {\n      let filteredBooks = this.props.books.filter(book => {\n        return book.name.toLowerCase().indexOf(this.state.search) !== -1;\n      });\n    } else if (this.state.selectedValue === 'author') {\n      let filteredBooks = this.props.books.filter(book => {\n        return book.author.toLowerCase().indexOf(this.state.search) !== -1;\n      });\n    } else if (this.state.selectedValue === 'isbn') {\n      let filteredBooks = this.props.books.filter(book => {\n        return book.isbn.indexOf(this.state.search) !== -1;\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/tainguyen/Desktop/my-app/src/components/PostInfo.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","axios","constants","PostInfo","constructor","props","componentDidMount","get","baseAddress","then","res","console","log","data","setState","post","catch","error","handleChange","e","postFilter","target","value","trim","toLowerCase","changedRole","roleFilter","state","isLoading","render","selectedValue","filteredBooks","books","filter","book","name","indexOf","search","author","isbn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAGA,eAAe,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAC9CQ,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;;AADF,SAUAC,iBAVA,GAUoB,MAAM;AACxBL,MAAAA,KAAK,CAACM,GAAN,CAAUL,SAAS,CAACM,WAAV,GAAwB,OAAlC,EACGC,IADH,CACQC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,aAAKC,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAEL,GAAG,CAACG;AAAZ,SAAd;AACD,OAJH,EAKGG,KALH,CAKSC,KAAK,IAAIN,OAAO,CAACC,GAAR,CAAYK,KAAZ,CALlB;AAMD,KAjBD;;AAAA,SAmBAC,YAnBA,GAmBgBC,CAAD,IAAO;AACpB,WAAKL,QAAL,CAAc;AAACM,QAAAA,UAAU,EAAED,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,IAAf,GAAsBC,WAAtB;AAAb,OAAd;AACD,KArBD;;AAAA,SAuBAC,WAvBA,GAuBcN,CAAC,IAAI;AACjB,WAAKL,QAAL,CAAc;AAAEY,QAAAA,UAAU,EAAEP,CAAC,CAACE,MAAF,CAASC;AAAvB,OAAd;AACD,KAzBD;;AAEE,SAAKK,KAAL,GAAa;AACXZ,MAAAA,IAAI,EAAE,EADK;AAEXK,MAAAA,UAAU,EAAE,EAFD;AAGXM,MAAAA,UAAU,EAAE,IAHD;AAIXE,MAAAA,SAAS,EAAE;AAJA,KAAb;AAMD;;AAmBDC,EAAAA,MAAM,GAAG;AACH,QAAI,KAAKF,KAAL,CAAWG,aAAX,KAA6B,MAAjC,EAAyC;AACzC,UAAIC,aAAa,GAAG,KAAK1B,KAAL,CAAW2B,KAAX,CAAiBC,MAAjB,CAAwBC,IAAI,IAAI;AAClD,eAAOA,IAAI,CAACC,IAAL,CAAUX,WAAV,GAAwBY,OAAxB,CAAgC,KAAKT,KAAL,CAAWU,MAA3C,MAAuD,CAAC,CAA/D;AACD,OAFmB,CAApB;AAGC,KAJD,MAIO,IAAI,KAAKV,KAAL,CAAWG,aAAX,KAA6B,QAAjC,EAA2C;AAClD,UAAIC,aAAa,GAAG,KAAK1B,KAAL,CAAW2B,KAAX,CAAiBC,MAAjB,CAAwBC,IAAI,IAAI;AAClD,eAAOA,IAAI,CAACI,MAAL,CAAYd,WAAZ,GAA0BY,OAA1B,CAAkC,KAAKT,KAAL,CAAWU,MAA7C,MACT,CAAC,CADC;AAED,OAHmB,CAApB;AAIC,KALM,MAKA,IAAI,KAAKV,KAAL,CAAWG,aAAX,KAA6B,MAAjC,EAAyC;AAChD,UAAIC,aAAa,GAAG,KAAK1B,KAAL,CAAW2B,KAAX,CAAiBC,MAAjB,CAAwBC,IAAI,IAAI;AAClD,eAAOA,IAAI,CAACK,IAAL,CAAUH,OAAV,CAAkB,KAAKT,KAAL,CAAWU,MAA7B,MAAyC,CAAC,CAAjD;AACD,OAFmB,CAApB;AAGC;;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD;;AAjD6C","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport constants from '../constants.json';\n\n\nexport default class PostInfo extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      post: [],\n      postFilter: \"\",\n      roleFilter: null,\n      isLoading: false,\n    };\n  }  \n  \n  componentDidMount = () => {\n    axios.get(constants.baseAddress + \"/post\")\n      .then(res => {\n        console.log(res.data);\n        this.setState({ post: res.data });\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleChange = (e) => {\n    this.setState({postFilter: e.target.value.trim().toLowerCase()});\n  }\n\n  changedRole = e => {\n    this.setState({ roleFilter: e.target.value })\n  }\n\n  render() {\n        if (this.state.selectedValue === 'name') {\n        let filteredBooks = this.props.books.filter(book => {\n          return book.name.toLowerCase().indexOf(this.state.search) !== -1;\n        })\n        } else if (this.state.selectedValue === 'author') {\n        let filteredBooks = this.props.books.filter(book => {\n          return book.author.toLowerCase().indexOf(this.state.search) !== \n        -1;\n        })\n        } else if (this.state.selectedValue === 'isbn') {\n        let filteredBooks = this.props.books.filter(book => {\n          return book.isbn.indexOf(this.state.search) !== -1;\n        })\n        }\n    return (\n      <div>\n          \n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}